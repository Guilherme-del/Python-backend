version: '3.8'

services:
  mongo:
    image: mongo:6
    entrypoint: /bin/sh -c "echo 'y8sCnGuoPUhEltYJNXU+GQ==' > /tmp/keyfile && chmod 400 /tmp/keyfile && mongod --replSet rs0 --bind_ip_all --keyFile /tmp/keyfile"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db
    networks:
      - mean_net
    deploy:
      replicas: 1

  mongo_replica_1:
    image: mongo:6
    entrypoint: /bin/sh -c "echo 'y8sCnGuoPUhEltYJNXU+GQ==' > /tmp/keyfile && chmod 400 /tmp/keyfile && mongod --replSet rs0 --bind_ip_all --keyFile /tmp/keyfile"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_replica1_data:/data/db
    networks:
      - mean_net
    deploy:
      replicas: 1

  mongo_replica_2:
    image: mongo:6
    entrypoint: /bin/sh -c "echo 'y8sCnGuoPUhEltYJNXU+GQ==' > /tmp/keyfile && chmod 400 /tmp/keyfile && mongod --replSet rs0 --bind_ip_all --keyFile /tmp/keyfile"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_replica2_data:/data/db
    networks:
      - mean_net
    deploy:
      replicas: 1

  backend:
    build:
      context: ../backEnd
      dockerfile: Dockerfile
    environment:
      MONGO_URL: mongodb://root:password@mongo:27017,mongo_replica_1:27017,mongo_replica_2:27017/meancrud?replicaSet=rs0
    networks:
      - mean_net
    depends_on:
      - mongo
      - mongo_replica_1
      - mongo_replica_2
    deploy:
      replicas: 1

  frontend:
    build:
      context: ../frontEnd
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    networks:
      - mean_net
    depends_on:
      - backend
    deploy:
      replicas: 1

networks:
  mean_net:
    driver: bridge

volumes:
  mongo_data:
  mongo_replica1_data:
  mongo_replica2_data:
